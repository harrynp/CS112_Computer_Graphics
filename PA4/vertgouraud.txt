#version 330
 
uniform mat4 viewMatrix, projMatrix;
uniform mat3 normalMatrix;

uniform vec4 Ambient;
uniform vec3 LightColor;
uniform vec3 LightPosition;
uniform float Shininess;
uniform float Strength;
uniform vec3 EyeDirection;

layout (location = 0) in vec4 position;
in vec3 normal;
in vec3 color;

layout(location = 1) in vec2 vertexUV;
 
out vec3 Color;
out vec3 Normal;
out vec4 Position;

// UV is the texture coordinate of this vertex
out vec2 UV;

void main()
{

	//Ambient
	vec3 ambient = Ambient.rgb;

	//Diffuse
	vec3 eyePos = Position.xyz / Position.w;
	vec3 lightDir = normalize(LightPosition - eyePos);
	float diff = max(dot(Normal, lightDir), 0);
	vec3 diffuse = diff * LightColor;

	//Specular
	vec3 pos = vec3(viewMatrix * Position);
	vec3 viewDir = normalize(-pos);
	vec3 reflectDir = reflect(-lightDir, Normal);
	float spec = pow(max(dot(viewDir, reflectDir), 0), Shininess);
	vec3 specular = Strength * spec * LightColor;
	vec3 result = (ambient + diffuse + specular) ;
    Color = result;
	Normal = normalize(normalMatrix * normal);
	UV = vertexUV;
	Position = position;

	// You need to multiply the projection (projMatrix) matrices and the model view (viewMatrix) and with the position in correct order
	// After this step you should be able too see a blue cube in the middle of the window
    gl_Position = projMatrix * viewMatrix * position ;


}


